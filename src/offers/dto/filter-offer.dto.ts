import { Type } from 'class-transformer';
import { ApiPropertyOptional } from '@nestjs/swagger';
import {
  IsOptional,
  IsString,
  IsNumberString,
  IsIn,
  Min,
} from 'class-validator';

export class FilterOfferDto {
  @ApiPropertyOptional({
    description:
      'Filtro por modalidade de ensino. Use "presencial" para cursos presenciais ou "ead" para cursos √† dist√¢ncia. Na resposta, ser√£o apresentados como "Presencial üè´" ou "EaD üè†".',
    example: 'presencial',
    enum: ['presencial', 'ead'],
  })
  @IsOptional()
  @IsString()
  kind?: string;

  @ApiPropertyOptional({
    description:
      'Filtro por n√≠vel do curso. Op√ß√µes dispon√≠veis:\n\n- bacharelado: Cursos de gradua√ß√£o bacharelado (4-5 anos)\n- tecnologo: Cursos tecn√≥logos (2-3 anos)\n- licenciatura: Cursos para forma√ß√£o de professores\n\nNa resposta, ser√£o apresentados com o prefixo "Gradua√ß√£o" e emojis.',
    example: 'bacharelado',
    enum: ['bacharelado', 'tecnologo', 'licenciatura'],
  })
  @IsOptional()
  @IsString()
  level?: string;

  @ApiPropertyOptional({
    description:
      'Pre√ßo m√≠nimo da mensalidade COM desconto. Informe apenas n√∫meros, sem R$ ou outros s√≠mbolos. Exemplo: para filtrar cursos acima de R$ 250, digite "250" ou "250.00".',
    example: '250.00',
  })
  @IsOptional()
  @IsNumberString()
  minPrice?: string;

  @ApiPropertyOptional({
    description:
      'Pre√ßo m√°ximo da mensalidade COM desconto. Informe apenas n√∫meros, sem R$ ou outros s√≠mbolos. Exemplo: para filtrar cursos at√© R$ 600,50, digite "600.50".',
    example: '600.50',
  })
  @IsOptional()
  @IsNumberString()
  maxPrice?: string;

  @ApiPropertyOptional({
    description:
      'Busca por nome do curso. A busca n√£o diferencia mai√∫sculas/min√∫sculas e encontra cursos que cont√©m o termo digitado em qualquer parte do nome. Exemplos: "medicina", "direito", "engenharia civil".',
    example: 'engenharia',
  })
  @IsOptional()
  @IsString()
  courseName?: string;

  @ApiPropertyOptional({
    description:
      'Define qual informa√ß√£o ser√° usada para ordenar os resultados:\n\n- courseName: Ordenar por nome do curso (alfabeticamente)\n- offeredPrice: Ordenar por pre√ßo com desconto\n- rating: Ordenar por avalia√ß√£o do curso (0-5 estrelas)',
    enum: ['courseName', 'offeredPrice', 'rating'],
    default: 'courseName',
  })
  @IsOptional()
  @IsString()
  @IsIn(['courseName', 'offeredPrice', 'rating'])
  sortBy?: string;

  @ApiPropertyOptional({
    description:
      'Dire√ß√£o da ordena√ß√£o:\n\n- ASC: Ascendente (A-Z, menor para maior pre√ßo, menor para maior avalia√ß√£o)\n- DESC: Descendente (Z-A, maior para menor pre√ßo, maior para menor avalia√ß√£o)',
    enum: ['ASC', 'DESC'],
    default: 'ASC',
  })
  @IsOptional()
  @IsIn(['ASC', 'DESC'])
  orderBy?: 'ASC' | 'DESC';

  @ApiPropertyOptional({
    description:
      'N√∫mero da p√°gina para resultados paginados. A primeira p√°gina √© 1. Se n√£o informado, exibe a primeira p√°gina. Use junto com o par√¢metro "limit" para controlar a navega√ß√£o entre p√°ginas de resultados.',
    default: 1,
    minimum: 1,
    example: 2,
  })
  @IsOptional()
  @Type(() => Number)
  @Min(1)
  page?: number;

  @ApiPropertyOptional({
    description:
      'Quantidade de ofertas mostradas por p√°gina. Se n√£o informado, exibe 10 resultados por p√°gina. Valores maiores trazem mais resultados por vez, mas podem deixar a resposta mais lenta.',
    default: 10,
    minimum: 1,
    maximum: 100,
    example: 5,
  })
  @IsOptional()
  @Type(() => Number)
  @Min(1)
  limit?: number;

  @ApiPropertyOptional({
    description:
      'Selecione apenas os campos desejados na resposta, separados por v√≠rgula (sem espa√ßos). √ötil para economizar dados ou obter apenas informa√ß√µes espec√≠ficas. Campos dispon√≠veis: id, courseName, kind, level, fullPrice, offeredPrice, discountPercentage, rating, iesName, iesLogo.\n\nExemplo: para obter apenas o nome do curso e o pre√ßo com desconto, use "courseName,offeredPrice".',
    example: 'courseName,offeredPrice,discountPercentage',
  })
  @IsOptional()
  @IsString()
  fields?: string;
}
